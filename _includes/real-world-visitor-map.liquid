<!-- Real World Map Visitor Widget -->
<div id="real-world-visitor-map" style="
  position: fixed;
  bottom: 20px;
  right: 20px;
  width: 280px;
  height: 180px;
  background: rgba(255, 255, 255, 0.95);
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  z-index: 1000;
  overflow: hidden;
">
  <!-- Real World Map using OpenStreetMap tiles -->
  <div id="leaflet-world-map" style="
    width: 100%;
    height: 100%;
    background: #f0f8ff;
  "></div>
</div>

<!-- Leaflet CSS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" 
      integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" 
      crossorigin="" />

<!-- Leaflet JS -->
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
        crossorigin=""></script>

<style>
/* Hide Leaflet attribution and zoom controls */
#real-world-visitor-map .leaflet-control-container {
  display: none;
}

#real-world-visitor-map .leaflet-bottom {
  display: none;
}

/* Custom marker styles */
.visitor-marker {
  background: #ff4444;
  border: 2px solid white;
  border-radius: 50%;
  box-shadow: 0 1px 3px rgba(0,0,0,0.3);
}

.visitor-marker.new {
  animation: realPulse 2s ease-in-out;
}

@keyframes realPulse {
  0%, 100% { transform: scale(1); opacity: 0.8; }
  50% { transform: scale(1.4); opacity: 1; }
}

/* Mobile responsiveness */
@media (max-width: 768px) {
  #real-world-visitor-map {
    width: 240px;
    height: 150px;
    bottom: 10px;
    right: 10px;
  }
}

@media (max-width: 480px) {
  #real-world-visitor-map {
    width: 200px;
    height: 120px;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  let worldMap;
  let visitorMarkers = [];
  let regionVisits = JSON.parse(localStorage.getItem('realWorldVisitorData') || '[]');
  
  // Initialize real world map
  function initRealWorldMap() {
    // Create map centered on China but showing global view
    worldMap = L.map('leaflet-world-map', {
      center: [30, 104], // China center
      zoom: 1,
      zoomControl: false,
      scrollWheelZoom: false,
      doubleClickZoom: false,
      touchZoom: false,
      dragging: false,
      attributionControl: false
    });
    
    // Add real world map tiles (using a clean, minimalist style)
    L.tileLayer('https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png', {
      maxZoom: 3,
      attribution: ''
    }).addTo(worldMap);
    
    // Load existing visitor markers
    loadExistingMarkers();
  }
  
  // Country to coordinates mapping (major countries)
  const countryCoords = {
    'CN': [35.8617, 104.1954],   // China
    'US': [39.8283, -98.5795],   // United States
    'GB': [55.3781, -3.4360],    // United Kingdom
    'DE': [51.1657, 10.4515],    // Germany
    'FR': [46.6034, 1.8883],     // France
    'JP': [36.2048, 138.2529],   // Japan
    'KR': [35.9078, 127.7669],   // South Korea
    'CA': [56.1304, -106.3468],  // Canada
    'AU': [-25.2744, 133.7751],  // Australia
    'IN': [20.5937, 78.9629],    // India
    'RU': [61.5240, 105.3188],   // Russia
    'BR': [-14.2350, -51.9253],  // Brazil
    'IT': [41.8719, 12.5674],    // Italy
    'ES': [40.4637, -3.7492],    // Spain
    'NL': [52.1326, 5.2913],     // Netherlands
    'SE': [60.1282, 18.6435],    // Sweden
    'NO': [60.4720, 8.4689],     // Norway
    'CH': [46.8182, 8.2275],     // Switzerland
    'AT': [47.5162, 14.5501],    // Austria
    'BE': [50.5039, 4.4699],     // Belgium
    'DK': [56.2639, 9.5018],     // Denmark
    'FI': [61.9241, 25.7482],    // Finland
    'SG': [1.3521, 103.8198],    // Singapore
    'HK': [22.3193, 114.1694],   // Hong Kong
    'TW': [23.6978, 120.9605],   // Taiwan
    'MX': [23.6345, -102.5528],  // Mexico
    'AR': [-38.4161, -63.6167],  // Argentina
    'CL': [-35.6751, -71.5430],  // Chile
    'ZA': [-30.5595, 22.9375],   // South Africa
    'EG': [26.0975, 30.0444],    // Egypt
    'NG': [9.0820, 8.6753],      // Nigeria
    'TH': [15.8700, 100.9925],   // Thailand
    'VN': [14.0583, 108.2772],   // Vietnam
    'ID': [-0.7893, 113.9213],   // Indonesia
    'MY': [4.2105, 101.9758],    // Malaysia
    'PH': [12.8797, 121.7740],   // Philippines
    'NZ': [-40.9006, 174.8860],  // New Zealand
    'IE': [53.4129, -8.2439],    // Ireland
    'PT': [39.3999, -8.2245],    // Portugal
    'GR': [39.0742, 21.8243],    // Greece
    'TR': [38.9637, 35.2433],    // Turkey
    'PL': [51.9194, 19.1451],    // Poland
    'CZ': [49.8175, 15.4730],    // Czech Republic
    'HU': [47.1625, 19.5033],    // Hungary
    'RO': [45.9432, 24.9668],    // Romania
    'BG': [42.7339, 25.4858],    // Bulgaria
    'HR': [45.1000, 15.2000],    // Croatia
    'SI': [46.1512, 14.9955],    // Slovenia
    'SK': [48.6690, 19.6990],    // Slovakia
    'EE': [58.5953, 25.0136],    // Estonia
    'LV': [56.8796, 24.6032],    // Latvia
    'LT': [55.1694, 23.8813],    // Lithuania
    'IS': [64.9631, -19.0208],   // Iceland
    'LU': [49.8153, 6.1296],     // Luxembourg
    'MT': [35.9375, 14.3754],    // Malta
    'CY': [35.1264, 33.4299]     // Cyprus
  };
  
  // Add visitor marker to real map
  function addVisitorMarker(countryCode, isNew = false) {
    const coords = countryCoords[countryCode];
    if (!coords || !worldMap) return;
    
    // Add small random offset to prevent overlapping
    const offsetLat = (Math.random() - 0.5) * 8;
    const offsetLng = (Math.random() - 0.5) * 8;
    
    const marker = L.circleMarker([coords[0] + offsetLat, coords[1] + offsetLng], {
      radius: 4,
      fillColor: '#ff4444',
      color: 'white',
      weight: 2,
      opacity: 1,
      fillOpacity: 0.8,
      className: isNew ? 'new' : ''
    }).addTo(worldMap);
    
    visitorMarkers.push(marker);
    
    // Remove animation class after effect
    if (isNew) {
      setTimeout(() => {
        if (marker.getElement()) {
          marker.getElement().classList.remove('new');
        }
      }, 2000);
    }
  }
  
  // Load existing visitor markers
  function loadExistingMarkers() {
    const uniqueCountries = [...new Set(regionVisits.map(v => v.countryCode))];
    uniqueCountries.forEach(countryCode => {
      addVisitorMarker(countryCode);
    });
  }
  
  // Track visitor country
  function trackVisitorCountry() {
    fetch('https://ipapi.co/json/')
      .then(response => response.json())
      .then(data => {
        const countryCode = data.country_code;
        
        if (countryCode && countryCoords[countryCode]) {
          // Check if this country was visited recently (last 8 hours)
          const recentVisit = regionVisits.find(v => 
            v.countryCode === countryCode && 
            (Date.now() - new Date(v.timestamp).getTime()) < 28800000 // 8 hours
          );
          
          if (!recentVisit) {
            const countryVisit = {
              countryCode: countryCode,
              timestamp: new Date().toISOString()
            };
            
            regionVisits.unshift(countryVisit);
            regionVisits = regionVisits.slice(0, 30); // Keep last 30
            localStorage.setItem('realWorldVisitorData', JSON.stringify(regionVisits));
            
            addVisitorMarker(countryCode, true);
          }
        }
      })
      .catch(error => {
        // Silently fail
        console.log('Location detection failed');
      });
  }
  
  // Initialize after short delay
  setTimeout(() => {
    initRealWorldMap();
    // Track visitor after map loads
    setTimeout(trackVisitorCountry, 2000);
  }, 500);
});
</script>
